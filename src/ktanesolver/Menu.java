/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ktanesolver;

import ktanesolver.VanillaNeedy.*;
import ktanesolver.ModdedRegular.*;
import ktanesolver.VanillaRegular.*;
import ktanesolver.ModdedNeedy.*;

public class Menu extends javax.swing.JFrame {
    String[] litInd, unlitInd;
    int batAA=0,batD=0,batHold=0;
    int portEmpty=0,portPlate=0,portDVI=0,portParallel=0,portPS2=0,portRJ45=0,portSerial=0,portStereoRCA=0,portTypes=0;
    int batSum=0, portSum=0, indSum=0;
    int unlitIndA=0, litIndA=0;
    char[] serial;
    public Menu() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfSerial = new javax.swing.JTextField();
        tfLitInd = new javax.swing.JTextField();
        tfUnlitInd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbRegular = new javax.swing.JComboBox<>();
        cbNeedy = new javax.swing.JComboBox<>();
        bRegular = new javax.swing.JButton();
        bNeedy = new javax.swing.JButton();
        cbRegularModded = new javax.swing.JComboBox<>();
        bModdedRegular = new javax.swing.JButton();
        cbNeedyModded = new javax.swing.JComboBox<>();
        bModdedNeedy = new javax.swing.JButton();
        sAA = new javax.swing.JSpinner();
        sD = new javax.swing.JSpinner();
        sHold = new javax.swing.JSpinner();
        sPlate = new javax.swing.JSpinner();
        sDVI = new javax.swing.JSpinner();
        sParallel = new javax.swing.JSpinner();
        sPS2 = new javax.swing.JSpinner();
        sRJ45 = new javax.swing.JSpinner();
        sSerial = new javax.swing.JSpinner();
        sStereo = new javax.swing.JSpinner();
        sEmpty = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfSerial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfSerialFocusLost(evt);
            }
        });

        tfLitInd.setToolTipText("");
        tfLitInd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfLitIndFocusLost(evt);
            }
        });

        tfUnlitInd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfUnlitIndFocusLost(evt);
            }
        });

        jLabel1.setText("Serial Number");

        jLabel2.setText("AA Batteries");

        jLabel3.setText("D Batteries");

        jLabel4.setText("Battery holders");

        jLabel5.setText("Port plates");

        jLabel6.setText("DVI");

        jLabel7.setText("Parallel");

        jLabel8.setText("PS/2");

        jLabel9.setText("RJ-45");

        jLabel10.setText("Serial port");

        jLabel11.setText("Stereo RCA");

        jLabel12.setText("Unlit indicators");

        jLabel13.setText("Lit indicators");

        cbRegular.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Button", "Complicated Wires", "Keypads", "Mazes", "Memory", "Morse Code", "Passwords", "Simon Says", "Who's on First", "Wire Sequences", "Wires" }));

        cbNeedy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Knobs" }));

        bRegular.setText("Regular");
        bRegular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegularActionPerformed(evt);
            }
        });

        bNeedy.setText("Needy");
        bNeedy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNeedyActionPerformed(evt);
            }
        });

        cbRegularModded.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adjacent Letters", "Adventure Game", "Astrology", "Blind Alley", "Caesar Cipher", "Logic" }));

        bModdedRegular.setText("Mod Regular");
        bModdedRegular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModdedRegularActionPerformed(evt);
            }
        });

        cbNeedyModded.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bModdedNeedy.setText("Mod Needy");
        bModdedNeedy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModdedNeedyActionPerformed(evt);
            }
        });

        sAA.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 2));

        sD.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sHold.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sPlate.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sDVI.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sParallel.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sPS2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sRJ45.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sSerial.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        sStereo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel14.setText("Empty port plates");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sAA)
                                            .addComponent(sD)
                                            .addComponent(sHold)
                                            .addComponent(sPlate))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(0, 68, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sDVI)
                                    .addComponent(sParallel)
                                    .addComponent(sPS2)
                                    .addComponent(sRJ45)
                                    .addComponent(sSerial)
                                    .addComponent(sStereo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUnlitInd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                            .addComponent(tfLitInd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbRegular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbNeedy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbRegularModded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bRegular)
                                    .addComponent(bModdedRegular))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbNeedyModded, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bNeedy, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bModdedNeedy, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sEmpty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLitInd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(sAA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(sD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(sHold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(sPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfUnlitInd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))))
                    .addComponent(jLabel13))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sEmpty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(sDVI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(sParallel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(sPS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(sRJ45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(sSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(sStereo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRegular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNeedy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRegular)
                            .addComponent(bNeedy))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRegularModded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNeedyModded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bModdedRegular)
                            .addComponent(bModdedNeedy))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSerialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSerialFocusLost
        tfSerial.setText(tfSerial.getText().toUpperCase());
    }//GEN-LAST:event_tfSerialFocusLost

    private void tfLitIndFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLitIndFocusLost
        tfLitInd.setText(tfLitInd.getText().toUpperCase());
    }//GEN-LAST:event_tfLitIndFocusLost

    private void tfUnlitIndFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfUnlitIndFocusLost
        tfUnlitInd.setText(tfUnlitInd.getText().toUpperCase());
    }//GEN-LAST:event_tfUnlitIndFocusLost

    private void bRegularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegularActionPerformed
        init();
        switch(cbRegular.getSelectedItem().toString().toLowerCase()){
            case "button":{
                Button fBut = new Button(batSum, litInd);
                fBut.setVisible(true);
                break;
            }
            case "complicated wires":{
                ComplicatedWires fComp = new ComplicatedWires(serial, portParallel, batSum);
                fComp.setVisible(true);
                break;
            }
            case "keypads":{
                Keypads fKeypads = new Keypads();
                fKeypads.setVisible(true);
                break;
            }
            /*case "mazes":{
                Button fBut = new Button(batD, litInd);
                fBut.setVisible(true);
                break;
            }*/
            case "memory":{
                Memory fMem = new Memory();
                fMem.setVisible(true);
                break;
            }
            case "morse code":{
                MorseCode fMorse = new MorseCode();
                fMorse.setVisible(true);
                break;
            }
            case "passwords":{
                Passwords fPassword = new Passwords();
                fPassword.setVisible(true);
                break;
            }
            case "simon says":{
                SimonSays fSim = new SimonSays(serial);
                fSim.setVisible(true);
                break;
            }
            case "who's on first":{
                WhosFirstV1 fWho = new WhosFirstV1();
                fWho.setVisible(true);
                break;
            }
            case "wire sequences":{
                WireSequence fSeq = new WireSequence();
                fSeq.setVisible(true);
                break;
            }
            case "wires":{
                Wires fWires = new Wires(serial);
                fWires.setVisible(true);
                break;
            }
        }
    }//GEN-LAST:event_bRegularActionPerformed

    private void bNeedyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNeedyActionPerformed
        init();
        switch(cbNeedy.getSelectedItem().toString().toLowerCase()){
            case "knobs":{
                NeedyKnobs fKnob = new NeedyKnobs();
                fKnob.setVisible(true);
                break;
            }
        }
    }//GEN-LAST:event_bNeedyActionPerformed

    private void bModdedRegularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModdedRegularActionPerformed
        init();
        switch(cbRegularModded.getSelectedItem().toString().toLowerCase()){
            case "adjacent letters":{
                AdjacentLetters fAd = new AdjacentLetters();
                fAd.setVisible(true);
                break;
            }
            case "adventure game":{
                AdventureGame fGa = new AdventureGame(batSum, serial, portDVI, portPS2, portParallel, portRJ45, portSerial, portStereoRCA, litIndA, unlitIndA);
                fGa.setVisible(true);
                break;                
            }
            case "astrology":{
                Astrology fAs = new Astrology(serial);
                fAs.setVisible(true);
                break;
            }
            case "blind alley":{
                BlindAlley fBA = new BlindAlley(portDVI, portParallel, portSerial, portRJ45, portPS2, portStereoRCA, litInd, batSum, unlitInd, batHold, serial);
                fBA.setVisible(true);
                break;
            }
            case "caesar cipher":{
                CaesarCipher fCa = new CaesarCipher(litInd, unlitInd, batSum, serial, portParallel);
                fCa.setVisible(true);
                break;
            }
            case "logic":{
                Logic fLogic = new Logic(batSum, indSum, portTypes, unlitIndA, batHold, litIndA, portParallel, portPS2, portSerial, unlitInd, litInd, serial, portDVI, portRJ45, portStereoRCA, portSum);
                fLogic.setVisible(true);
                break;
            }
        }
    }//GEN-LAST:event_bModdedRegularActionPerformed

    private void bModdedNeedyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModdedNeedyActionPerformed
       init();
       switch(cbNeedyModded.getSelectedItem().toString().toLowerCase()){
           case "hex to decimal":{
               HexToDecimal fHex = new HexToDecimal();
               fHex.setVisible(true);
           }
       }
    }//GEN-LAST:event_bModdedNeedyActionPerformed
    private void init(){
        serial=tfSerial.getText().toCharArray();
        litInd=tfLitInd.getText().split(" ");
        if(litInd[0].equals("")){
            litInd=null;
        }
        unlitInd=tfUnlitInd.getText().split(" ");
        if(unlitInd[0].equals("")){
            unlitInd=null;
        }
        batAA=Integer.parseInt(sAA.getValue().toString());
        batD=Integer.parseInt(sD.getValue().toString());
        batHold=Integer.parseInt(sHold.getValue().toString());
        portPlate=Integer.parseInt(sPlate.getValue().toString());
        portDVI=Integer.parseInt(sDVI.getValue().toString());
        portParallel=Integer.parseInt(sParallel.getValue().toString());
        portPS2=Integer.parseInt(sPS2.getValue().toString());        
        portRJ45=Integer.parseInt(sRJ45.getValue().toString());
        portSerial=Integer.parseInt(sSerial.getValue().toString());
        portStereoRCA=Integer.parseInt(sStereo.getValue().toString());
        batSum=batAA+batD;
        portEmpty=Integer.parseInt(sEmpty.getValue().toString());
        if(litInd==null&&unlitInd==null){
            indSum=0;
            litIndA=0;
            unlitIndA=0;
        }
        else{
        if(litInd == null){
            litIndA=0;
            unlitIndA=unlitInd.length;
            indSum=unlitIndA;
        }
        else{
            if(unlitInd == null){
                unlitIndA=0;
                litIndA=litInd.length;
                indSum=litIndA;
            }
            else{
                    litIndA=litInd.length;
                    unlitIndA=unlitInd.length;
                    indSum=litIndA+unlitIndA;
            }
        }
        }
        if(portDVI>0)
            portTypes++;
        if(portPS2>0)
            portTypes++;
        if(portParallel>0)
            portTypes++;
        if(portRJ45>0)
            portTypes++;
        if(portSerial>0)
            portTypes++;
        if(portStereoRCA>0)
            portTypes++;
        portSum=portDVI+portPS2+portParallel+portRJ45+portSerial+portStereoRCA;
        
        
    }
    private void setZero(javax.swing.JTextField i){
        if(i.getText()==null)
            i.setText("0");
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bModdedNeedy;
    private javax.swing.JButton bModdedRegular;
    private javax.swing.JButton bNeedy;
    private javax.swing.JButton bRegular;
    private javax.swing.JComboBox<String> cbNeedy;
    private javax.swing.JComboBox<String> cbNeedyModded;
    private javax.swing.JComboBox<String> cbRegular;
    private javax.swing.JComboBox<String> cbRegularModded;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner sAA;
    private javax.swing.JSpinner sD;
    private javax.swing.JSpinner sDVI;
    private javax.swing.JSpinner sEmpty;
    private javax.swing.JSpinner sHold;
    private javax.swing.JSpinner sPS2;
    private javax.swing.JSpinner sParallel;
    private javax.swing.JSpinner sPlate;
    private javax.swing.JSpinner sRJ45;
    private javax.swing.JSpinner sSerial;
    private javax.swing.JSpinner sStereo;
    private javax.swing.JTextField tfLitInd;
    private javax.swing.JTextField tfSerial;
    private javax.swing.JTextField tfUnlitInd;
    // End of variables declaration//GEN-END:variables
}
