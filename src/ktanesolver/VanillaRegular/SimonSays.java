/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ktanesolver.VanillaRegular;

/**
 *
 * @author Kuba
 */
public class SimonSays extends javax.swing.JFrame {
    String[] input;
    int strike;
    boolean vowel=false;
    char[] serial;
    public SimonSays(char[] s) {
        serial=s;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbI1 = new javax.swing.JComboBox<>();
        cbI2 = new javax.swing.JComboBox<>();
        cbI3 = new javax.swing.JComboBox<>();
        cbI4 = new javax.swing.JComboBox<>();
        cbI5 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sStrike = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        lR1 = new javax.swing.JLabel();
        lR2 = new javax.swing.JLabel();
        lR3 = new javax.swing.JLabel();
        lR4 = new javax.swing.JLabel();
        lR5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bAccept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbI1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Yellow", "Green", "-" }));
        cbI1.setSelectedIndex(4);

        cbI2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Yellow", "Green", "-" }));
        cbI2.setSelectedIndex(4);

        cbI3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Yellow", "Green", "-" }));
        cbI3.setSelectedIndex(4);

        cbI4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Yellow", "Green", "-" }));
        cbI4.setSelectedIndex(4);

        cbI5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Yellow", "Green", "-" }));
        cbI5.setSelectedIndex(4);

        jLabel1.setText("1st stage");

        jLabel2.setText("2nd stage");

        jLabel3.setText("3rd stage");

        jLabel4.setText("4th stage");

        jLabel5.setText("5th stage");

        sStrike.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2, 1));

        jLabel6.setText("Strikes");

        jLabel7.setText("Result:");

        bAccept.setText("OK");
        bAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAcceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sStrike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(61, 61, 61)
                                .addComponent(bAccept))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lR1)
                    .addComponent(lR5)
                    .addComponent(lR2)
                    .addComponent(lR3)
                    .addComponent(lR4))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lR1)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lR2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lR3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lR4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(lR5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sStrike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(bAccept))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAcceptActionPerformed
        strike=Integer.parseInt(sStrike.getValue().toString());
        checkVowel();
        input = new String[5];
        input[0]=cbI1.getSelectedItem().toString().toLowerCase();
        input[1]=cbI2.getSelectedItem().toString().toLowerCase();
        input[2]=cbI3.getSelectedItem().toString().toLowerCase();
        input[3]=cbI4.getSelectedItem().toString().toLowerCase();
        input[4]=cbI5.getSelectedItem().toString().toLowerCase();
        lR1.setText(setAnswer(input[0], strike));
        lR2.setText(setAnswer(input[1], strike));
        lR3.setText(setAnswer(input[2], strike));
        lR4.setText(setAnswer(input[3], strike));
        lR5.setText(setAnswer(input[4], strike));
    }//GEN-LAST:event_bAcceptActionPerformed
    private String setAnswer(String i,int strike){
        String answer = null;
        if(vowel)
        {
                switch(strike){
                    case 0:{
                        switch(i){
                            case "red":{
                                answer="Blue";
                                return answer;
                                        }
                            
                            case "blue":{
                        answer="Red";
                        return answer;
                                        }
                            
                            case "green":{
                        answer="Yellow";
                        return answer;
                                        }
                            
                            case "yellow":{
                        answer="Green";
                        return answer;
                                            }
                            
                            default:{
                        answer="-";
                        return answer;
                                    }
                }
            }
            case 1:{
                switch(i){
                    case "red":{
                                answer="Yellow";
                                return answer;
                                        }
                    case "blue":{
                                answer="Green";
                                return answer;
                                        }
                    case "green":{
                                answer="Blue";
                                return answer;
                                        }
                    case "yellow":{
                                answer="Red";
                                return answer;
                                        }
                    default:{
                        answer="-";
                        return answer;
                    }
                }
            }
            case 2:{
                switch(i){
                    case "red":{
                                answer="Green";
                                return answer;
                                        }
                    case "blue":{
                                answer="Red";
                                return answer;
                                        }
                    case "green":{
                                answer="Yellow";
                                return answer;
                                        }
                    case "yellow":{
                                answer="Blue";
                                return answer;
                                        }
                    default:{
                        answer="-";
                        return answer;
                    }
                }
            }
        }
    }
        else{
            switch(strike){
                    case 0:{
                        switch(i){
                            case "red":{
                                answer="Blue";
                                return answer;
                                        }
                            
                            case "blue":{
                        answer="Yellow";
                        return answer;
                                        }
                            
                            case "green":{
                        answer="Green";
                        return answer;
                                        }
                            
                            case "yellow":{
                        answer="Red";
                        return answer;
                                            }
                            
                            default:{
                        answer="-";
                        return answer;
                                    }
                }
            }
            case 1:{
                switch(i){
                    case "red":{
                                answer="Red";
                                return answer;
                                        }
                    case "blue":{
                                answer="Blue";
                                return answer;
                                        }
                    case "green":{
                                answer="Yellow";
                                return answer;
                                        }
                    case "yellow":{
                                answer="Green";
                                return answer;
                                        }
                    default:{
                        answer="-";
                        return answer;
                    }
                }
            }
            case 2:{
                switch(i){
                    case "red":{
                                answer="Yellow";
                                return answer;
                                        }
                    case "blue":{
                                answer="Green";
                                return answer;
                                        }
                    case "green":{
                                answer="Blue";
                                return answer;
                                        }
                    case "yellow":{
                                answer="Red";
                                return answer;
                                        }
                    default:{
                        answer="-";
                        return answer;
                    }
                }
            }
            }
        }
        return answer;
}
    private void checkVowel() {
        for(int i=0;i<serial.length;i++){
            if(serial[i]=='A'||serial[i]=='E'||serial[i]=='I'||serial[i]=='O'||serial[i]=='U'){
                vowel=true;
                break;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimonSays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimonSays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimonSays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimonSays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SimonSays().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAccept;
    private javax.swing.JComboBox<String> cbI1;
    private javax.swing.JComboBox<String> cbI2;
    private javax.swing.JComboBox<String> cbI3;
    private javax.swing.JComboBox<String> cbI4;
    private javax.swing.JComboBox<String> cbI5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lR1;
    private javax.swing.JLabel lR2;
    private javax.swing.JLabel lR3;
    private javax.swing.JLabel lR4;
    private javax.swing.JLabel lR5;
    private javax.swing.JSpinner sStrike;
    // End of variables declaration//GEN-END:variables
}
